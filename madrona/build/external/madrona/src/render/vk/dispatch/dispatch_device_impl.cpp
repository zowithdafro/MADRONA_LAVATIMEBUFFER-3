    :
      createCommandPool( reinterpret_cast<PFN_vkCreateCommandPool>(checkPtr(get_dev_addr(ctx, "vkCreateCommandPool"), "vkCreateCommandPool"))),
      resetCommandPool( reinterpret_cast<PFN_vkResetCommandPool>(checkPtr(get_dev_addr(ctx, "vkResetCommandPool"), "vkResetCommandPool"))),
      destroyCommandPool( reinterpret_cast<PFN_vkDestroyCommandPool>(checkPtr(get_dev_addr(ctx, "vkDestroyCommandPool"), "vkDestroyCommandPool"))),
      getDeviceQueue2( reinterpret_cast<PFN_vkGetDeviceQueue2>(checkPtr(get_dev_addr(ctx, "vkGetDeviceQueue2"), "vkGetDeviceQueue2"))),
      createImage( reinterpret_cast<PFN_vkCreateImage>(checkPtr(get_dev_addr(ctx, "vkCreateImage"), "vkCreateImage"))),
      destroyImage( reinterpret_cast<PFN_vkDestroyImage>(checkPtr(get_dev_addr(ctx, "vkDestroyImage"), "vkDestroyImage"))),
      getImageMemoryRequirements( reinterpret_cast<PFN_vkGetImageMemoryRequirements>(checkPtr(get_dev_addr(ctx, "vkGetImageMemoryRequirements"), "vkGetImageMemoryRequirements"))),
      getImageSparseMemoryRequirements( reinterpret_cast<PFN_vkGetImageSparseMemoryRequirements>(checkPtr(get_dev_addr(ctx, "vkGetImageSparseMemoryRequirements"), "vkGetImageSparseMemoryRequirements"))),
      queueBindSparse( reinterpret_cast<PFN_vkQueueBindSparse>(checkPtr(get_dev_addr(ctx, "vkQueueBindSparse"), "vkQueueBindSparse"))),
      allocateMemory( reinterpret_cast<PFN_vkAllocateMemory>(checkPtr(get_dev_addr(ctx, "vkAllocateMemory"), "vkAllocateMemory"))),
      freeMemory( reinterpret_cast<PFN_vkFreeMemory>(checkPtr(get_dev_addr(ctx, "vkFreeMemory"), "vkFreeMemory"))),
      bindImageMemory( reinterpret_cast<PFN_vkBindImageMemory>(checkPtr(get_dev_addr(ctx, "vkBindImageMemory"), "vkBindImageMemory"))),
      createImageView( reinterpret_cast<PFN_vkCreateImageView>(checkPtr(get_dev_addr(ctx, "vkCreateImageView"), "vkCreateImageView"))),
      destroyImageView( reinterpret_cast<PFN_vkDestroyImageView>(checkPtr(get_dev_addr(ctx, "vkDestroyImageView"), "vkDestroyImageView"))),
      createPipelineLayout( reinterpret_cast<PFN_vkCreatePipelineLayout>(checkPtr(get_dev_addr(ctx, "vkCreatePipelineLayout"), "vkCreatePipelineLayout"))),
      destroyPipelineLayout( reinterpret_cast<PFN_vkDestroyPipelineLayout>(checkPtr(get_dev_addr(ctx, "vkDestroyPipelineLayout"), "vkDestroyPipelineLayout"))),
      createPipelineCache( reinterpret_cast<PFN_vkCreatePipelineCache>(checkPtr(get_dev_addr(ctx, "vkCreatePipelineCache"), "vkCreatePipelineCache"))),
      destroyPipelineCache( reinterpret_cast<PFN_vkDestroyPipelineCache>(checkPtr(get_dev_addr(ctx, "vkDestroyPipelineCache"), "vkDestroyPipelineCache"))),
      createComputePipelines( reinterpret_cast<PFN_vkCreateComputePipelines>(checkPtr(get_dev_addr(ctx, "vkCreateComputePipelines"), "vkCreateComputePipelines"))),
      createGraphicsPipelines( reinterpret_cast<PFN_vkCreateGraphicsPipelines>(checkPtr(get_dev_addr(ctx, "vkCreateGraphicsPipelines"), "vkCreateGraphicsPipelines"))),
      destroyPipeline( reinterpret_cast<PFN_vkDestroyPipeline>(checkPtr(get_dev_addr(ctx, "vkDestroyPipeline"), "vkDestroyPipeline"))),
      createShaderModule( reinterpret_cast<PFN_vkCreateShaderModule>(checkPtr(get_dev_addr(ctx, "vkCreateShaderModule"), "vkCreateShaderModule"))),
      destroyShaderModule( reinterpret_cast<PFN_vkDestroyShaderModule>(checkPtr(get_dev_addr(ctx, "vkDestroyShaderModule"), "vkDestroyShaderModule"))),
      createBuffer( reinterpret_cast<PFN_vkCreateBuffer>(checkPtr(get_dev_addr(ctx, "vkCreateBuffer"), "vkCreateBuffer"))),
      destroyBuffer( reinterpret_cast<PFN_vkDestroyBuffer>(checkPtr(get_dev_addr(ctx, "vkDestroyBuffer"), "vkDestroyBuffer"))),
      getBufferMemoryRequirements( reinterpret_cast<PFN_vkGetBufferMemoryRequirements>(checkPtr(get_dev_addr(ctx, "vkGetBufferMemoryRequirements"), "vkGetBufferMemoryRequirements"))),
      bindBufferMemory( reinterpret_cast<PFN_vkBindBufferMemory>(checkPtr(get_dev_addr(ctx, "vkBindBufferMemory"), "vkBindBufferMemory"))),
      mapMemory( reinterpret_cast<PFN_vkMapMemory>(checkPtr(get_dev_addr(ctx, "vkMapMemory"), "vkMapMemory"))),
      unmapMemory( reinterpret_cast<PFN_vkUnmapMemory>(checkPtr(get_dev_addr(ctx, "vkUnmapMemory"), "vkUnmapMemory"))),
      flushMappedMemoryRanges( reinterpret_cast<PFN_vkFlushMappedMemoryRanges>(checkPtr(get_dev_addr(ctx, "vkFlushMappedMemoryRanges"), "vkFlushMappedMemoryRanges"))),
      invalidateMappedMemoryRanges( reinterpret_cast<PFN_vkInvalidateMappedMemoryRanges>(checkPtr(get_dev_addr(ctx, "vkInvalidateMappedMemoryRanges"), "vkInvalidateMappedMemoryRanges"))),
      allocateCommandBuffers( reinterpret_cast<PFN_vkAllocateCommandBuffers>(checkPtr(get_dev_addr(ctx, "vkAllocateCommandBuffers"), "vkAllocateCommandBuffers"))),
      freeCommandBuffers( reinterpret_cast<PFN_vkFreeCommandBuffers>(checkPtr(get_dev_addr(ctx, "vkFreeCommandBuffers"), "vkFreeCommandBuffers"))),
      beginCommandBuffer( reinterpret_cast<PFN_vkBeginCommandBuffer>(checkPtr(get_dev_addr(ctx, "vkBeginCommandBuffer"), "vkBeginCommandBuffer"))),
      endCommandBuffer( reinterpret_cast<PFN_vkEndCommandBuffer>(checkPtr(get_dev_addr(ctx, "vkEndCommandBuffer"), "vkEndCommandBuffer"))),
      cmdCopyBuffer( reinterpret_cast<PFN_vkCmdCopyBuffer>(checkPtr(get_dev_addr(ctx, "vkCmdCopyBuffer"), "vkCmdCopyBuffer"))),
      cmdFillBuffer( reinterpret_cast<PFN_vkCmdFillBuffer>(checkPtr(get_dev_addr(ctx, "vkCmdFillBuffer"), "vkCmdFillBuffer"))),
      queueSubmit( reinterpret_cast<PFN_vkQueueSubmit>(checkPtr(get_dev_addr(ctx, "vkQueueSubmit"), "vkQueueSubmit"))),
      createFence( reinterpret_cast<PFN_vkCreateFence>(checkPtr(get_dev_addr(ctx, "vkCreateFence"), "vkCreateFence"))),
      destroyFence( reinterpret_cast<PFN_vkDestroyFence>(checkPtr(get_dev_addr(ctx, "vkDestroyFence"), "vkDestroyFence"))),
      waitForFences( reinterpret_cast<PFN_vkWaitForFences>(checkPtr(get_dev_addr(ctx, "vkWaitForFences"), "vkWaitForFences"))),
      resetFences( reinterpret_cast<PFN_vkResetFences>(checkPtr(get_dev_addr(ctx, "vkResetFences"), "vkResetFences"))),
      cmdPipelineBarrier( reinterpret_cast<PFN_vkCmdPipelineBarrier>(checkPtr(get_dev_addr(ctx, "vkCmdPipelineBarrier"), "vkCmdPipelineBarrier"))),
      cmdCopyBufferToImage( reinterpret_cast<PFN_vkCmdCopyBufferToImage>(checkPtr(get_dev_addr(ctx, "vkCmdCopyBufferToImage"), "vkCmdCopyBufferToImage"))),
      cmdCopyImageToBuffer( reinterpret_cast<PFN_vkCmdCopyImageToBuffer>(checkPtr(get_dev_addr(ctx, "vkCmdCopyImageToBuffer"), "vkCmdCopyImageToBuffer"))),
      createSemaphore( reinterpret_cast<PFN_vkCreateSemaphore>(checkPtr(get_dev_addr(ctx, "vkCreateSemaphore"), "vkCreateSemaphore"))),
      destroySemaphore( reinterpret_cast<PFN_vkDestroySemaphore>(checkPtr(get_dev_addr(ctx, "vkDestroySemaphore"), "vkDestroySemaphore"))),
      createDescriptorSetLayout( reinterpret_cast<PFN_vkCreateDescriptorSetLayout>(checkPtr(get_dev_addr(ctx, "vkCreateDescriptorSetLayout"), "vkCreateDescriptorSetLayout"))),
      destroyDescriptorSetLayout( reinterpret_cast<PFN_vkDestroyDescriptorSetLayout>(checkPtr(get_dev_addr(ctx, "vkDestroyDescriptorSetLayout"), "vkDestroyDescriptorSetLayout"))),
      createDescriptorPool( reinterpret_cast<PFN_vkCreateDescriptorPool>(checkPtr(get_dev_addr(ctx, "vkCreateDescriptorPool"), "vkCreateDescriptorPool"))),
      destroyDescriptorPool( reinterpret_cast<PFN_vkDestroyDescriptorPool>(checkPtr(get_dev_addr(ctx, "vkDestroyDescriptorPool"), "vkDestroyDescriptorPool"))),
      resetDescriptorPool( reinterpret_cast<PFN_vkResetDescriptorPool>(checkPtr(get_dev_addr(ctx, "vkResetDescriptorPool"), "vkResetDescriptorPool"))),
      allocateDescriptorSets( reinterpret_cast<PFN_vkAllocateDescriptorSets>(checkPtr(get_dev_addr(ctx, "vkAllocateDescriptorSets"), "vkAllocateDescriptorSets"))),
      freeDescriptorSets( reinterpret_cast<PFN_vkFreeDescriptorSets>(checkPtr(get_dev_addr(ctx, "vkFreeDescriptorSets"), "vkFreeDescriptorSets"))),
      updateDescriptorSets( reinterpret_cast<PFN_vkUpdateDescriptorSets>(checkPtr(get_dev_addr(ctx, "vkUpdateDescriptorSets"), "vkUpdateDescriptorSets"))),
      createSampler( reinterpret_cast<PFN_vkCreateSampler>(checkPtr(get_dev_addr(ctx, "vkCreateSampler"), "vkCreateSampler"))),
      destroySampler( reinterpret_cast<PFN_vkDestroySampler>(checkPtr(get_dev_addr(ctx, "vkDestroySampler"), "vkDestroySampler"))),
      cmdBindDescriptorSets( reinterpret_cast<PFN_vkCmdBindDescriptorSets>(checkPtr(get_dev_addr(ctx, "vkCmdBindDescriptorSets"), "vkCmdBindDescriptorSets"))),
      cmdBindPipeline( reinterpret_cast<PFN_vkCmdBindPipeline>(checkPtr(get_dev_addr(ctx, "vkCmdBindPipeline"), "vkCmdBindPipeline"))),
      cmdDispatch( reinterpret_cast<PFN_vkCmdDispatch>(checkPtr(get_dev_addr(ctx, "vkCmdDispatch"), "vkCmdDispatch"))),
      cmdPushConstants( reinterpret_cast<PFN_vkCmdPushConstants>(checkPtr(get_dev_addr(ctx, "vkCmdPushConstants"), "vkCmdPushConstants"))),
      createRenderPass( reinterpret_cast<PFN_vkCreateRenderPass>(checkPtr(get_dev_addr(ctx, "vkCreateRenderPass"), "vkCreateRenderPass"))),
      destroyRenderPass( reinterpret_cast<PFN_vkDestroyRenderPass>(checkPtr(get_dev_addr(ctx, "vkDestroyRenderPass"), "vkDestroyRenderPass"))),
      createFramebuffer( reinterpret_cast<PFN_vkCreateFramebuffer>(checkPtr(get_dev_addr(ctx, "vkCreateFramebuffer"), "vkCreateFramebuffer"))),
      destroyFramebuffer( reinterpret_cast<PFN_vkDestroyFramebuffer>(checkPtr(get_dev_addr(ctx, "vkDestroyFramebuffer"), "vkDestroyFramebuffer"))),
      cmdDraw( reinterpret_cast<PFN_vkCmdDraw>(checkPtr(get_dev_addr(ctx, "vkCmdDraw"), "vkCmdDraw"))),
      cmdDrawIndexed( reinterpret_cast<PFN_vkCmdDrawIndexed>(checkPtr(get_dev_addr(ctx, "vkCmdDrawIndexed"), "vkCmdDrawIndexed"))),
      cmdDrawIndexedIndirect( reinterpret_cast<PFN_vkCmdDrawIndexedIndirect>(checkPtr(get_dev_addr(ctx, "vkCmdDrawIndexedIndirect"), "vkCmdDrawIndexedIndirect"))),
      cmdDrawIndexedIndirectCount( reinterpret_cast<PFN_vkCmdDrawIndexedIndirectCount>(checkPtr(get_dev_addr(ctx, "vkCmdDrawIndexedIndirectCount"), "vkCmdDrawIndexedIndirectCount"))),
      cmdBeginRenderPass( reinterpret_cast<PFN_vkCmdBeginRenderPass>(checkPtr(get_dev_addr(ctx, "vkCmdBeginRenderPass"), "vkCmdBeginRenderPass"))),
      cmdEndRenderPass( reinterpret_cast<PFN_vkCmdEndRenderPass>(checkPtr(get_dev_addr(ctx, "vkCmdEndRenderPass"), "vkCmdEndRenderPass"))),
      cmdBindIndexBuffer( reinterpret_cast<PFN_vkCmdBindIndexBuffer>(checkPtr(get_dev_addr(ctx, "vkCmdBindIndexBuffer"), "vkCmdBindIndexBuffer"))),
      cmdBlitImage( reinterpret_cast<PFN_vkCmdBlitImage>(checkPtr(get_dev_addr(ctx, "vkCmdBlitImage"), "vkCmdBlitImage"))),
      cmdSetViewport( reinterpret_cast<PFN_vkCmdSetViewport>(checkPtr(get_dev_addr(ctx, "vkCmdSetViewport"), "vkCmdSetViewport"))),
      cmdSetScissor( reinterpret_cast<PFN_vkCmdSetScissor>(checkPtr(get_dev_addr(ctx, "vkCmdSetScissor"), "vkCmdSetScissor"))),
      cmdSetLineWidth( reinterpret_cast<PFN_vkCmdSetLineWidth>(checkPtr(get_dev_addr(ctx, "vkCmdSetLineWidth"), "vkCmdSetLineWidth"))),
      deviceWaitIdle( reinterpret_cast<PFN_vkDeviceWaitIdle>(checkPtr(get_dev_addr(ctx, "vkDeviceWaitIdle"), "vkDeviceWaitIdle"))),
      getDeviceProcAddr( reinterpret_cast<PFN_vkGetDeviceProcAddr>(checkPtr(get_dev_addr(ctx, "vkGetDeviceProcAddr"), "vkGetDeviceProcAddr"))),
      createQueryPool( reinterpret_cast<PFN_vkCreateQueryPool>(checkPtr(get_dev_addr(ctx, "vkCreateQueryPool"), "vkCreateQueryPool"))),
      destroyQueryPool( reinterpret_cast<PFN_vkDestroyQueryPool>(checkPtr(get_dev_addr(ctx, "vkDestroyQueryPool"), "vkDestroyQueryPool"))),
      getQueryPoolResults( reinterpret_cast<PFN_vkGetQueryPoolResults>(checkPtr(get_dev_addr(ctx, "vkGetQueryPoolResults"), "vkGetQueryPoolResults"))),
      cmdResetQueryPool( reinterpret_cast<PFN_vkCmdResetQueryPool>(checkPtr(get_dev_addr(ctx, "vkCmdResetQueryPool"), "vkCmdResetQueryPool"))),
      destroyDevice( reinterpret_cast<PFN_vkDestroyDevice>(checkPtr(get_dev_addr(ctx, "vkDestroyDevice"), "vkDestroyDevice"))),
      createSwapchainKHR(!support_present ? nullptr : reinterpret_cast<PFN_vkCreateSwapchainKHR>(checkPtr(get_dev_addr(ctx, "vkCreateSwapchainKHR"), "vkCreateSwapchainKHR"))),
      destroySwapchainKHR(!support_present ? nullptr : reinterpret_cast<PFN_vkDestroySwapchainKHR>(checkPtr(get_dev_addr(ctx, "vkDestroySwapchainKHR"), "vkDestroySwapchainKHR"))),
      getSwapchainImagesKHR(!support_present ? nullptr : reinterpret_cast<PFN_vkGetSwapchainImagesKHR>(checkPtr(get_dev_addr(ctx, "vkGetSwapchainImagesKHR"), "vkGetSwapchainImagesKHR"))),
      acquireNextImageKHR(!support_present ? nullptr : reinterpret_cast<PFN_vkAcquireNextImageKHR>(checkPtr(get_dev_addr(ctx, "vkAcquireNextImageKHR"), "vkAcquireNextImageKHR"))),
      queuePresentKHR(!support_present ? nullptr : reinterpret_cast<PFN_vkQueuePresentKHR>(checkPtr(get_dev_addr(ctx, "vkQueuePresentKHR"), "vkQueuePresentKHR"))),
      createAccelerationStructureKHR(!support_rt ? nullptr : reinterpret_cast<PFN_vkCreateAccelerationStructureKHR>(checkPtr(get_dev_addr(ctx, "vkCreateAccelerationStructureKHR"), "vkCreateAccelerationStructureKHR"))),
      getAccelerationStructureBuildSizesKHR(!support_rt ? nullptr : reinterpret_cast<PFN_vkGetAccelerationStructureBuildSizesKHR>(checkPtr(get_dev_addr(ctx, "vkGetAccelerationStructureBuildSizesKHR"), "vkGetAccelerationStructureBuildSizesKHR"))),
      getAccelerationStructureDeviceAddressKHR(!support_rt ? nullptr : reinterpret_cast<PFN_vkGetAccelerationStructureDeviceAddressKHR>(checkPtr(get_dev_addr(ctx, "vkGetAccelerationStructureDeviceAddressKHR"), "vkGetAccelerationStructureDeviceAddressKHR"))),
      getBufferDeviceAddress(!support_rt ? nullptr : reinterpret_cast<PFN_vkGetBufferDeviceAddress>(checkPtr(get_dev_addr(ctx, "vkGetBufferDeviceAddress"), "vkGetBufferDeviceAddress"))),
      cmdBuildAccelerationStructuresKHR(!support_rt ? nullptr : reinterpret_cast<PFN_vkCmdBuildAccelerationStructuresKHR>(checkPtr(get_dev_addr(ctx, "vkCmdBuildAccelerationStructuresKHR"), "vkCmdBuildAccelerationStructuresKHR"))),
      cmdBuildAccelerationStructuresIndirectKHR(!support_rt ? nullptr : reinterpret_cast<PFN_vkCmdBuildAccelerationStructuresIndirectKHR>(checkPtr(get_dev_addr(ctx, "vkCmdBuildAccelerationStructuresIndirectKHR"), "vkCmdBuildAccelerationStructuresIndirectKHR"))),
      destroyAccelerationStructureKHR(!support_rt ? nullptr : reinterpret_cast<PFN_vkDestroyAccelerationStructureKHR>(checkPtr(get_dev_addr(ctx, "vkDestroyAccelerationStructureKHR"), "vkDestroyAccelerationStructureKHR"))),
      getDeviceAccelerationStructureCompatibilityKHR(!support_rt ? nullptr : reinterpret_cast<PFN_vkGetDeviceAccelerationStructureCompatibilityKHR>(checkPtr(get_dev_addr(ctx, "vkGetDeviceAccelerationStructureCompatibilityKHR"), "vkGetDeviceAccelerationStructureCompatibilityKHR"))),
      cmdCopyAccelerationStructureKHR(!support_rt ? nullptr : reinterpret_cast<PFN_vkCmdCopyAccelerationStructureKHR>(checkPtr(get_dev_addr(ctx, "vkCmdCopyAccelerationStructureKHR"), "vkCmdCopyAccelerationStructureKHR"))),
      cmdCopyMemoryToAccelerationStructureKHR(!support_rt ? nullptr : reinterpret_cast<PFN_vkCmdCopyMemoryToAccelerationStructureKHR>(checkPtr(get_dev_addr(ctx, "vkCmdCopyMemoryToAccelerationStructureKHR"), "vkCmdCopyMemoryToAccelerationStructureKHR"))),
      cmdCopyAccelerationStructureToMemoryKHR(!support_rt ? nullptr : reinterpret_cast<PFN_vkCmdCopyAccelerationStructureToMemoryKHR>(checkPtr(get_dev_addr(ctx, "vkCmdCopyAccelerationStructureToMemoryKHR"), "vkCmdCopyAccelerationStructureToMemoryKHR"))),
      cmdWriteAccelerationStructuresPropertiesKHR(!support_rt ? nullptr : reinterpret_cast<PFN_vkCmdWriteAccelerationStructuresPropertiesKHR>(checkPtr(get_dev_addr(ctx, "vkCmdWriteAccelerationStructuresPropertiesKHR"), "vkCmdWriteAccelerationStructuresPropertiesKHR"))),
      getMemoryFdKHR(!support_mem_export ? nullptr : reinterpret_cast<PFN_vkGetMemoryFdKHR>(checkPtr(get_dev_addr(ctx, "vkGetMemoryFdKHR"), "vkGetMemoryFdKHR"))),
      getSemaphoreFdKHR(!support_mem_export ? nullptr : reinterpret_cast<PFN_vkGetSemaphoreFdKHR>(checkPtr(get_dev_addr(ctx, "vkGetSemaphoreFdKHR"), "vkGetSemaphoreFdKHR")))
